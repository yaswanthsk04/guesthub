#!/bin/sh
# Template for updating core components (checker.py and executor.sh)
# 
# HOW TO USE:
# 1. Copy this template to updates/updateX (where X is next number)
# 2. Replace v0.6.0 with target branch if different
# 3. Test in safe environment first
#
# WHAT THIS DOES:
# - Downloads new versions to /tmp
# - Creates a delayed update script
# - Schedules update for 5 minutes later
# - Ensures safe update window
# - Handles backups and permissions
# - Self-cleans after successful update

# Download new versions to temporary location
wget https://raw.githubusercontent.com/yaswanthsk04/guesthub_v0.1.0/v0.6.0/scripts/update/update-checker.py -O /tmp/checker.py.new
wget https://raw.githubusercontent.com/yaswanthsk04/guesthub_v0.1.0/v0.6.0/scripts/update/update-executor.sh -O /tmp/executor.sh.new

# Create delayed update script
cat > /tmp/delayed_update.sh << 'EOF'
#!/bin/sh

# Safety checks for ongoing operations
if ls /usr/local/monitoring/*/*.new 1> /dev/null 2>&1; then
    logger -t "delayed-update" "Updates in progress, will retry in 5 minutes"
    exit 0
fi

if pgrep -f "docker-compose" > /dev/null; then
    logger -t "delayed-update" "Docker operations in progress, will retry in 5 minutes"
    exit 0
fi

if pgrep -f "update-executor.sh" > /dev/null; then
    logger -t "delayed-update" "Executor running updates, will retry in 5 minutes"
    exit 0
fi

# Create backup directory with timestamp
backup_dir="/usr/local/monitoring/backups/$(date +%Y%m%d)"
mkdir -p "$backup_dir"
logger -t "delayed-update" "Created backup directory: $backup_dir"

# Stop service
/etc/init.d/update-checker stop
sleep 2
pkill -f "checker.py"

# Backup old files
cp /usr/local/monitoring/update-system/checker.py "$backup_dir/checker.py.$(date +%H%M%S).bak"
cp /usr/local/monitoring/update-system/executor.sh "$backup_dir/executor.sh.$(date +%H%M%S).bak"

# Install new files
mv /tmp/checker.py.new /usr/local/monitoring/update-system/checker.py
mv /tmp/executor.sh.new /usr/local/monitoring/update-system/executor.sh

# Set permissions
chmod 755 /usr/local/monitoring/update-system/checker.py
chmod 755 /usr/local/monitoring/update-system/executor.sh

# Start service
/etc/init.d/update-checker start

# If everything succeeded, clean up
if [ $? -eq 0 ]; then
    # Remove cron job and self
    crontab -l | grep -v "delayed_update.sh" | crontab -
    rm -- "$0"
    logger -t "delayed-update" "Core components updated successfully"
fi
EOF

chmod 755 /tmp/delayed_update.sh

# Schedule delayed update
(crontab -l 2>/dev/null; echo "*/5 * * * * /tmp/delayed_update.sh") | crontab -

logger -t "update" "Scheduled update of core components in 5 minutes"
